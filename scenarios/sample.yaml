# Run with one of the following:
#   akf-translate scenarios/sample.yaml --translate
#   akf-translate scenarios/sample.yaml --execute

name: sample scenario
description: sample scenario
author: lgactna
seed: "0"
libraries:
  - akflib.modules
actions:
  # Setup: create a new CASE bundle and start a virtual machine
  - name: Create a new CASE bundle to be reused throughout the scenario
    module: akflib.modules.case.AKFBundleModule
  - name: Instantiate a hypervisor object tied to a specific virtual machine
    module: akflib.modules.vbox.VBoxCreateModule
    args:
      machine_name: "akf-windows-1"
  - name: Start the virtual machine
    module: akflib.modules.vbox.VBoxStartMachineModule

  # Start the Chromium subservice, so a single object can be shared between
  # all of the actions. Then, visit a single URL and a list of URLs from a file.
  - name: Start a shared Chromium service
    module: akf_windows.modules.chromium.ChromiumServiceStartModule
  - name: Visit a single website
    module: akf_windows.modules.chromium.ChromiumVisitURLsModule
    args:
      browser: "msedge"
      urls: 
       - "https://www.google.com"
  - name: Visit a list of websites from a file
    module: akf_windows.modules.chromium.ChromiumVisitURLsModule
    args:
      browser: "msedge"
      file: "./scenarios/sample_urls.txt" 
  - name: Generate CASE browser artifacts
    module: akf_windows.modules.chromium.ChromiumHistoryModule
    args:
      browser: "msedge"
  # Tear down the client-side connection to the Chromium subservice. This doesn't
  # terminate the subservice on the virtual machine.
  - name: Stop the shared Chromium service
    module: akf_windows.modules.chromium.ChromiumServiceStopModule


  # Collect prefetch files. We *can* manually add actions for starting and stopping
  # the artifact service, but standalone modules should be written to spin one up
  # if needed.
  # - name: Start and connect to service for collecting Windows artifacts
  #   module: akf_windows.modules.artifacts.WindowsArtifactServiceStartModule
  - name: Collect prefetch files
    module: akf_windows.modules.artifacts.PrefetchModule
  # - name: Tear down connection
  #   module: akf_windows.modules.artifacts.WindowsArtifactServiceStopModule

  # Teardown: stop the VM and collect outputs
  - name: Stop the virtual machine
    module: akflib.modules.vbox.VBoxStopMachineModule
    args:
      force: false
  - name: Export the virtual machine to a disk image
    module: akflib.modules.vbox.VBoxCreateDiskImageModule
    args:
      output_path: "C:/Users/kisun/Desktop/akf-windows_1.raw"
      image_format: "raw"
  - name: Export the CASE bundle to a JSON-LD file
    module: akflib.modules.case.WriteAKFBundleModule
    args:
      output_path: "C:/Users/kisun/Desktop/bundle.jsonld"
    